name: Build Windows Executable with PyInstaller

on:
  push:
    tags: [ 'v*.*.*' ]
  release:
    types: [ published ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install uv
          uv sync
        shell: bash

      - name: Build Windows executable with PyInstaller
        run: |
          uv run pyinstaller ./wcag_checker_extracted.spec
        shell: bash

      - name: Upload Windows executable artifact
        uses: actions/upload-artifact@v4
        with:
          name: wcag_checker_windows.zip
          path: dist/wcag_checker.zip

  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install uv
          uv sync

      - name: Build Linux executable with PyInstaller
        run: |
          uv run pyinstaller ./wcag_checker_extracted.spec

      - name: Upload Linux executable artifact
        uses: actions/upload-artifact@v4
        with:
          name: wcag_checker_linux.zip
          path: dist/wcag_checker.zip

  release:
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Release and Upload Artifacts
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/wcag_checker_windows.zip
            dist/wcag_checker_linux.zip
          draft: false
          prerelease: false
          name: Release ${{ github.ref_name }}
          body: Automated release for ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
